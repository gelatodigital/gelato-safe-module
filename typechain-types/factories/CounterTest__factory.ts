/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CounterTest, CounterTestInterface } from "../CounterTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_ops",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastExecuted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ops",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161034638038061034683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6102b3806100936000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306661abd1461005c5780631c15ff771461007857806346d4adf214610081578063cf5303cf14610096578063e70abe92146100ac575b600080fd5b61006560015481565b6040519081526020015b60405180910390f35b61006560025481565b61009461008f3660046101c0565b6100d7565b005b61009e610167565b60405161006f9291906101d9565b6000546100bf906001600160a01b031681565b6040516001600160a01b03909116815260200161006f565b60b4600254426100e7919061024e565b116101495760405162461bcd60e51b815260206004820152602860248201527f436f756e7465723a20696e637265617365436f756e743a2054696d65206e6f7460448201526708195b185c1cd95960c21b606482015260840160405180910390fd5b806001600082825461015b9190610265565b90915550504260025550565b6000606060b46002544261017b919061024e565b6040805160016024808301919091528251808303909101815260449091019091526020810180516001600160e01b031663236a56f960e11b1790529110939092509050565b6000602082840312156101d257600080fd5b5035919050565b821515815260006020604081840152835180604085015260005b8181101561020f578581018301518582016060015282016101f3565b81811115610221576000606083870101525b50601f01601f191692909201606001949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561026057610260610238565b500390565b6000821982111561027857610278610238565b50019056fea2646970667358221220179a9838435155bb943d9c5bcca70eba3afbe8e3e0e26fff872e60ab5e189fa064736f6c634300080c0033";

type CounterTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: CounterTestConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class CounterTest__factory extends ContractFactory {
  constructor(...args: CounterTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CounterTest";
  }

  deploy(_ops: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<CounterTest> {
    return super.deploy(_ops, overrides || {}) as Promise<CounterTest>;
  }
  getDeployTransaction(_ops: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(_ops, overrides || {});
  }
  attach(address: string): CounterTest {
    return super.attach(address) as CounterTest;
  }
  connect(signer: Signer): CounterTest__factory {
    return super.connect(signer) as CounterTest__factory;
  }
  static readonly contractName: "CounterTest";
  public readonly contractName: "CounterTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterTestInterface {
    return new utils.Interface(_abi) as CounterTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CounterTest {
    return new Contract(address, _abi, signerOrProvider) as CounterTest;
  }
}
