/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CounterTestWT, CounterTestWTInterface } from "../CounterTestWT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ops",
        type: "address",
      },
      {
        internalType: "address",
        name: "_taskCreator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dedicatedMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastExecuted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ops",
    outputs: [
      {
        internalType: "contract IOps",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610a77380380610a7783398101604081905261002f9161015e565b8181816001600160a01b03166080816001600160a01b031681525050816001600160a01b031663573ea5756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ad9190610198565b6001600160a01b0390811660c0526040516337b6269f60e21b8152908216600482015273c815db16d4be6ddf2685c201937905abf338f5d79063ded89a7c906024016040805180830381865afa15801561010b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012f91906101bc565b506001600160a01b031660a052506101f092505050565b6001600160a01b038116811461015b57600080fd5b50565b6000806040838503121561017157600080fd5b825161017c81610146565b602084015190925061018d81610146565b809150509250929050565b6000602082840312156101aa57600080fd5b81516101b581610146565b9392505050565b600080604083850312156101cf57600080fd5b82516101da81610146565b6020840151909250801515811461018d57600080fd5b60805160a05160c05161084b61022c6000396000818161032301526103e80152600060b60152600081816101470152610272015261084b6000f3fe6080604052600436106100595760003560e01c806306661abd146100655780631c15ff771461008e57806328f150eb146100a457806346d4adf2146100f0578063cf5303cf14610112578063e70abe921461013557600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007b60005481565b6040519081526020015b60405180910390f35b34801561009a57600080fd5b5061007b60015481565b3480156100b057600080fd5b506100d87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610085565b3480156100fc57600080fd5b5061011061010b3660046106ab565b610169565b005b34801561011e57600080fd5b50610127610214565b604051610085929190610720565b34801561014157600080fd5b506100d87f000000000000000000000000000000000000000000000000000000000000000081565b60b4600154426101799190610751565b116101dc5760405162461bcd60e51b815260206004820152602860248201527f436f756e7465723a20696e637265617365436f756e743a2054696d65206e6f7460448201526708195b185c1cd95960c21b60648201526084015b60405180910390fd5b806000808282546101ed9190610768565b90915550504260015560008061020161026d565b9150915061020f82826102fa565b505050565b6000606060b4600154426102289190610751565b6040805160016024808301919091528251808303909101815260449091019091526020810180516001600160e01b031663236a56f960e11b1790529110939092509050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b810c6366040518163ffffffff1660e01b81526004016040805180830381865afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f19190610780565b90939092509050565b6001600160a01b03811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156103e25760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168360405160006040518083038185875af1925050503d806000811461038c576040519150601f19603f3d011682016040523d82523d6000602084013e610391565b606091505b505090508061020f5760405162461bcd60e51b815260206004820152601e60248201527f5f7472616e736665723a20455448207472616e73666572206661696c6564000060448201526064016101d3565b61040d817f000000000000000000000000000000000000000000000000000000000000000084610411565b5050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261020f928692916000916104a191851690849061051e565b80519091501561020f57808060200190518101906104bf91906107bd565b61020f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101d3565b606061052d8484600085610535565b949350505050565b6060824710156105965760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101d3565b600080866001600160a01b031685876040516105b291906107e6565b60006040518083038185875af1925050503d80600081146105ef576040519150601f19603f3d011682016040523d82523d6000602084013e6105f4565b606091505b509150915061060587838387610610565b979650505050505050565b6060831561067c578251610675576001600160a01b0385163b6106755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d3565b508161052d565b61052d83838151156106915781518083602001fd5b8060405162461bcd60e51b81526004016101d39190610802565b6000602082840312156106bd57600080fd5b5035919050565b60005b838110156106df5781810151838201526020016106c7565b838111156106ee576000848401525b50505050565b6000815180845261070c8160208601602086016106c4565b601f01601f19169290920160200192915050565b821515815260406020820152600061052d60408301846106f4565b634e487b7160e01b600052601160045260246000fd5b6000828210156107635761076361073b565b500390565b6000821982111561077b5761077b61073b565b500190565b6000806040838503121561079357600080fd5b825160208401519092506001600160a01b03811681146107b257600080fd5b809150509250929050565b6000602082840312156107cf57600080fd5b815180151581146107df57600080fd5b9392505050565b600082516107f88184602087016106c4565b9190910192915050565b6020815260006107df60208301846106f456fea2646970667358221220e40d5b60203ed24bf87accc6b64f78918670414ad7c2053cf74d62b0fc887ac664736f6c634300080c0033";

type CounterTestWTConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: CounterTestWTConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class CounterTestWT__factory extends ContractFactory {
  constructor(...args: CounterTestWTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CounterTestWT";
  }

  deploy(
    _ops: string,
    _taskCreator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CounterTestWT> {
    return super.deploy(_ops, _taskCreator, overrides || {}) as Promise<CounterTestWT>;
  }
  getDeployTransaction(
    _ops: string,
    _taskCreator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ops, _taskCreator, overrides || {});
  }
  attach(address: string): CounterTestWT {
    return super.attach(address) as CounterTestWT;
  }
  connect(signer: Signer): CounterTestWT__factory {
    return super.connect(signer) as CounterTestWT__factory;
  }
  static readonly contractName: "CounterTestWT";
  public readonly contractName: "CounterTestWT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterTestWTInterface {
    return new utils.Interface(_abi) as CounterTestWTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CounterTestWT {
    return new Contract(address, _abi, signerOrProvider) as CounterTestWT;
  }
}
